#!/bin/bash
#Assumes that current version RPM/DEB/etc is going to be squirreled away in /root, away from prying children
TERM=xterm
DIR="/root"
URL="https://plex.tv/pms/downloads/5.json"
RPM=$(ls $DIR | grep plexmediaserver)
RUNNING=$(/usr/lib/plexmediaserver/"Plex Media Server" --version | cut -d"v" -f2 | cut -d"-" -f1)
JSON_RESP=$(wget -cq $URL -O -)
#Edit distro here (redhat, debian, etc)
PLEX_URL=$(echo $JSON_RESP | jq -r '.[].Linux.releases[]? | select(.distro=="redhat") | select(.build=="linux-x86_64").url')
NEW=$(echo $PLEX_URL | cut -d"/" -f7)
CURRENT=$(echo $JSON_RESP | jq -r '.computer[] | select(.id=="linux").version' | cut -d"-" -f1)

echo "Running: $RUNNING"
echo "Current: $CURRENT"
if [[ "$RUNNING" != "$CURRENT" && "$CURRENT" != "" && "$RUNNING" != "" ]]; then
        echo "Update Required"
        wget $PLEX_URL -O $DIR/$NEW
        systemctl stop plexmediaserver
        rpm -e plexmediaserver
        rpm -i $DIR/$NEW
        if [[ "$RPM" != "" ]]; then
                rm $DIR/$RPM
        fi
        systemctl enable plexmediaserver
        echo "[$(date '+%Y-%m-%d %H:%M:%S')]: Plex Media Server has been updated to $CURRENT" >> /var/log/plexupdates
    else
        echo "No Update Required"
        echo "[$(date '+%Y-%m-%d %H:%M:%S')]: Plex Media Server is currently up-to-date" >> /var/log/plexupdates
fi
